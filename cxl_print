######################################
# 
# 脚本名称: cxl_print
#
# 功能：
#		打印相关函数
#
# 注意事项：
#		不能单独执行，通过source包含
#
# 作者: chenxuelin@emicnet.com
# 
######################################

# ----------------------------
#  检查是否包含文件
# ----------------------------
function cxl_print(){
    return 0
}
# 声明变量
RED_COLOR='\E[1;31m'   #红
GREEN_COLOR='\E[1;32m' #绿
YELOW_COLOR='\E[1;33m' #黄
BLUE_COLOR='\E[1;34m'  #蓝
PINK_COLOR='\E[1;35m'  #粉红
RES='\E[0m'
OK_VAL="成功"
FAIL_VAL="失败"
OK_MSG="${GREEN_COLOR}${OK_VAL}${RES}"
FAIL_MSG="${RED_COLOR}${FAIL_VAL}${RES}"

# ----------------------------
# 显示成功信息
# ----------------------------
function cxl_echo_success(){
    echo -e "${GREEN_COLOR}$1${RES}" && return 0 || return 1
}
# ----------------------------
# 显示失败信息
# ----------------------------
function cxl_echo_fail(){
    echo -e "${RED_COLOR}$1${RES}" && return 0 || return 1
}
# ----------------------------
# 显示提示信息
# ----------------------------
function cxl_echo_info(){
    echo -e "${BLUE_COLOR}$1${RES}" && return 0 || return 1
}
# ----------------------------
# 显示警告信息
# ----------------------------
function cxl_echo_warn(){    
    echo -e "${PINK_COLOR}$1${RES}" && return 0 || return 1   
}
# ----------------------------
# 显示调试信息
# ----------------------------
function cxl_echo_debug(){
    echo -e "$1" && return 0 || return 1
}
# ----------------------------
# 记录log和打印函数
# ----------------------------
function print_log(){
    local level="DEBUG"
    if [ -n "$2" ] ; then level=$2; fi

    case $level in  
        error|ERROR|Error|Err|err|Fail|fail) 
            cxl_echo_fail "$1";;
        info|INFO|Info)
            cxl_echo_info "$1";;
        warn|WARN|Warn)
            cxl_echo_warn "$1";;
        success|SUCCESS|Succ|succ)
        	cxl_echo_success "$1";;
        *) 
            cxl_echo_debug "$1";;
   esac
   local status=1
   cxl_log "$1" $level && status=0 || status=1
   return $status
}


# ----------------------------
# 显示好看的info
# ----------------------------
function pretty_title(){
    local title="title"
    if [ -n "$1" ] ; then title="$1"; fi
    local len=`expr length "$title"`
    local totalstars=0
    let "totalstars=$len+8";   
    local stars=""
    while [ $totalstars -gt 0 ]; do stars=$stars"*"; let "totalstars--"; done
    local spaces="   "
    echo -e "${BLUE_COLOR}$stars${RES}"
	echo -e "${BLUE_COLOR}*$spaces$title$spaces*${RES}"
	echo -e "${BLUE_COLOR}$stars${RES}"
}
